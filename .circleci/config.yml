version: 2.1 # use CircleCI 2.1
jobs: # a collection of steps

  build: # runs not using Workflows must have a `build` job as entry point
    working_directory: ~/webapp # directory where steps will run
    docker: # run the steps with Docker
      - image: circleci/node:10.16.3 # ...with this image as the primary container; this is where all `steps` will run
      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: assignments
          POSTGRES_PASSWORD: Neuananya@17
    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory

      - run: mkdir ~/junit
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache: # special step to restore the dependency cache
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: install-npm-wee
          command: npm install

      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run:
          name: Install AWS CLI
          command: |
            sudo apt-get -y -qq install awscli
            aws --version
      - run:
          name: Zip JAR File
          command: |
            zip -r application.zip cloudWatchAgent.json assignmentServer.js README.md package.json package-lock.json .gitignore test server bin scripts appspec.yml
            chmod 777 application.zip 
      - run:
          name: Upload ZIP to S3 bucket
          command: aws s3 cp application.zip s3://$AWS_BUCKET_NAME
      - run:
          name: Create Deployment
          command: |
            aws deploy create-deployment --application-name $CODE_DEPLOY_APP_NAME --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name $DEPLOYMEMENT_GROUP --s3-location bucket=$AWS_BUCKET_NAME,bundleType=zip,key=application.zip

  pr_check: # runs not using Workflows must have a `build` job as entry point
    working_directory: ~/webapp # directory where steps will run
    docker: # run the steps with Docker
      - image: circleci/node:10.16.3 # ...with this image as the primary container; this is where all `steps` will run
      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: assignments
          POSTGRES_PASSWORD: Neuananya@17
    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory

      - run: mkdir ~/junit
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache: # special step to restore the dependency cache
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: install-npm-wee
          command: npm install

      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
          
      - run: # run tests
          name: test
          command: npm test
          environment:
            MOCHA_FILE: ~/junit/test-results.xml
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit
  

workflows:
  version: 2
  pr-check-workflow:
    jobs:
    # - pr_check
      - build
  build-deploy-workflow:
    jobs:
    - build:
        filters:
          branches:
            only: master
